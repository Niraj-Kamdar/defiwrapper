type Token {
  address: String!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
}

type Protocol {
  id: String!
  organization: String!
  name: String!
  version: String!
  adapterUri: String
  forkedFrom: Protocol
}

type AccountBalance {
  account: String!
  network: String!
  protocols: [ProtocolBalance!]!
}

type ProtocolBalance {
  protocol: Protocol!
  assets: [AssetBalance!]!
}

type AssetBalance {
  apr: String
  apy: String
  balance: TokenComponentBalance!
  isDebt: Boolean!
  claimableTokens: [TokenBalance!]!
}

type ProtocolBalance {
  protocol: Protocol!
  assets: [AssetBalance!]!
}

type AccountBalance {
  account: String!
  network: String!
  protocols: [ProtocolBalance!]!
}

type TokenComponent {
  tokenAddress: String!
  """
  unresolvedComponenets: No. of components that could not be resolved
  Note: Higher the number, higher the inaccuracy
  """
  unresolvedComponents: Int!
  components: [TokenComponent!]!
  rate: String! # BigDecimal
}

type TokenComponentBalance {
  token: TokenBalance!
  unresolvedComponents: Int!
  components: [TokenComponentBalance!]!
}

type TokenBalance {
  token: Token!
  balance: String! # BigDecimal
  values: [TokenValue!]!
}

type TokenValue {
  currency: String!
  price: String! # BigDecimal
  value: String! # BigDecimal (price * balance)
}
